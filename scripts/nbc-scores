#!/bin/sh
#
# nbc-scores --- calculate and print classification scores
#
# usage: nbc-scores [mode=N] [genus=S] [section=S] [species=S] FILE [FILE ...]
#
# arguments:
#   FILE      TSV file containing test results as exported by `nbc-trainer.py`.
#
# variables:
#   mode      A numeric mode is one octal digit (0-7), derived by adding up
#             the bits with values 1, 2, and 4. The mode sets on which ranks
#             to check for matches: genus (1), section (2), and species (4). It
#             defaults to 7.
#   genus     Filter by genus name (if mode sets genus).
#   section   Filter by section name (if mode sets section).
#   species   Filter by species name (if mode sets species).
#
# examples:
#   scores for rank genus (ignoring section and species):
#     nbc-scores mode=1 results/*.tsv
#
#   scores for species `Cypripedium flavum`:
#     nbc-scores mode=5 genus=Cypripedium species=flavum results/*.tsv

gawk '
BEGIN {
	FS = "\t"
	i = 0
	mode = 7
}

BEGINFILE {
	total = matches = 0
}

FNR > 1 {
	is_match = 1
	if ( and(mode, 1) == 1 && genus && $2 != genus ) is_match = 0
	if ( and(mode, 2) == 2 && section && $3 != section ) is_match = 0
	if ( and(mode, 4) == 4 && species && $4 != species) is_match = 0
	if (is_match) total++
}

FNR > 1 && is_match {
	if ( and(mode, 1) == 1 && $5 !~ $2) is_match = 0
	if ( and(mode, 2) == 2 && $6 !~ $3) is_match = 0
	if ( and(mode, 4) == 4 && $7 !~ $4) is_match = 0
	if (is_match) matches++
}

ENDFILE {
	if (total) {
		means[i] = matches / total
		printf "%s: %s/%s (%.2f%%)\n", FILENAME, matches, total, means[i] * 100
		i++
	}
}

END {
	if (total) {
		n = length(means)
		for ( i=0; i < n; i++ ) sum += means[i]
		printf "overall: %.2f%%\n", sum / n * 100
	}
	else
		print "No data matches your criteria"
}' $@

return $?
